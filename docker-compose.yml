version: '2'
services:
  api:
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - 80:3000
      - 443:4000
    volumes:
      - ./:/usr/src/app
    links:
      - auth
      - redis
    depends_on:
      - mongo
    tty: true
    networks:
      default:
        ipv4_address: 10.200.0.2
  auth:
    image: jincort/backend-auth:production
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      FORCE_HTTPS: disabled
      JWT_KEY: "uZrJ!xe*xN?!;oU.u*;QOSM+|=4C?WH?6eWPcK/6AkIXIVGQguSA*r"
      THROTTLER_WHITE_LIST: "127.0.0.1,10.200.0.2,10.200.0.6"
      TENANT_WHITE_LIST: "127.0.0.1,10.200.0.2,10.200.0.6"
    ports:
      - "3000"
      - "4000"
    links:
      - redis
    networks:
      default:
        ipv4_address: 10.200.0.3

  redis:
    image: jincort/backend-redis:production
    ports:
      - 6379:6379
    volumes:
      - ./storage/redis:/data
    networks:
      default:
        ipv4_address: 10.200.0.4

  mongo:
    image: mongo:4.0
    volumes:
        - ./storage/mongodb:/data/db
    networks:
      default:
        ipv4_address: 10.200.0.7
    ports:
      - 27017:27017
      - 28017:28017

  ico:
    image: jincort/backend-ico-dashboard:dev-4055b4f
    env_file:
      - .env.dashboard.test
    ports:
      - 3000:3000
    links:
      - auth
      - redis
      - verify
    depends_on:
      - mongo
    tty: true
    networks:
      default:
        ipv4_address: 10.200.0.6

  verify:
      image: jincort/backend-verify:dev-62b3a0d
      environment:
        REDIS_URL: 'redis://redis:6379'
        THROTTLER_WHITE_LIST: "127.0.0.1,10.200.0.8,10.200.0.9"
      ports:
        - "3000"
        - "4000"
      links:
        - auth
        - redis
      networks:
        default:
          ipv4_address: 10.200.0.9

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 10.200.0.0/16
          gateway: 10.200.0.1